<launch>
    <arg name="paused" default="true"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="false"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch" />

    <!-- Load the URDF into the ROS Parameter Server -->
    <!-- <arg name="model" default="$(find mycar_description)/urdf/xacro/mycar_description.xacro" />
    <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" /> -->

    <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find mycar_description)/urdf/xacro/mycar_description.xacro'" />
    <node name="urdf_spawner" pkg="gazebo_ros"  type="spawn_model" respawn="false" output="screen"
    args="-urdf -model mycar -param robot_description"/>

    <!-- launch RVIZ -->
   

    <!-- Run a python script to send a service call the gazebo_ros to spawn a URDF robot -->
    <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model robot -param robot_description -z 0.05"/> 
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nav_sim)/nav.rviz"/> -->

    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> -->
    <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> -->

    <include file="$(find mycar_gazebo)/launch/mycar_controller.launch" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find mycar_gazebo)/mycar.rviz"/>

</launch>
